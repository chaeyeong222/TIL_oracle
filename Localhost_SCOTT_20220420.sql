
1. book, panmai, danga, gogaek 조인하여 다음을 출력 한다.
  -- 책이름(title) 고객명(g_name) 년도(p_date) 수량(p_su) 단가(price) 금액(p_su*price)
  -- 단, 년도 내림차순 출력
 

TITLE            G_NAME               P_DATE         P_SU      PRICE         금액
---------------- -------------------- -------- ---------- ---------- ----------
운영체제         강남서점             21/11/03          5        450       2250
엑셀             서울서점             21/11/03         31        321       9951
데이터베이스     강북서점             21/11/03         26        300       7800
데이터베이스     강남서점             21/11/03         17        300       5100
엑세스           강남서점             21/11/03         21        510      10710
운영체제         우리서점             21/11/03         13        450       5850
데이터베이스     우리서점             00/10/10         10        300       3000
데이터베이스     강북서점             00/10/10         15        500       7500
워드             서울서점             00/07/07          5        320       1600
데이터베이스     도시서점             00/03/04         20        300       6000

2. book 테이블, panmai 테이블, gogaek 테이블을 b_id 필드와 g_id 필드를 기준으로 조인하여 
다음의 필드 출력 한다. 
단, book 테이블의 모든 행은 출력 되도록 한다.(OUTER 조인)
  ( 판매가 안된 책 정보도 출력 )
 
  
책ID       제목                     G_ID G_NAME                     판매수량
---------- ------------------- ---------- -------------------- ----------
b-1        운영체제                     1 우리서점                     13
a-1        데이터베이스                 1 우리서점                     10
a-1        데이터베이스                 2 도시서점                     20
d-1        엑셀                         4 서울서점                     31
c-1        워드                         4 서울서점                      5
b-1        운영체제                     6 강남서점                      5
a-1        데이터베이스                 6 강남서점                     17
f-1        엑세스                       6 강남서점                     21
a-2        데이터베이스                 7 강북서점                     15
a-1        데이터베이스                 7 강북서점                     26
e-1        파워포인트                                                     
f-2        엑세스                                                        
b-2        운영체제                                                      



3. 년도, 월별 판매 현황 구하기

년도   월        판매금액( p_su * price )
---- -- ----------
2000 03       6000
2000 07       1600
2000 10      10500
2021 11      41661

 

4. 서점별 년도별 판매현황 구하기 

년도         서점ID 서점명                판매금액
---- ---------- -------------------- ----------
2000          7 강북서점                   7500
2000          2 도시서점                   6000
2000          4 서울서점                   1600
2000          1 우리서점                   3000
2021          6 강남서점                  18060
2021          7 강북서점                   7800
2021          4 서울서점                   9951
2021          1 우리서점                   5850

8개 행이 선택되었습니다. 
 

5. 올해 가장 판매가 많은 책(수량을 기준으로) 

책ID       제목       권수
---------- ----------------
a-1        데이터베이스  43
 
-- TOP-N 방식, RANK() 함수
 
6. 서점별 판매현황 구하기

서점코드  서점명  판매금액합  비율(소수점 둘째반올림)  
---------- -------------------------- ----------------
7	    강북서점	15300		26%
4	    서울서점	11551		19%
2	    도시서점	6000		10%
6	    강남서점	18060		30%
1	    우리서점	8850		15%
 ------------------------------------------
 1. 데이터베이스 모델링( DB모델링) 정의
   ㄱ. 데이터베이스? 관련된 데이터들의 집합(모임)
   ㄴ. 데이터베이스 모델링? 현실 세계의 업무적인 프로세스를 물리적으로 데이터베이스화 시키기 위한 과정
     예. 회사사원 -> 정보(데이터) -> 저장 ( 사원관리) -> 물리적 저장( 데이터베이스화) 하는 과정
     
       업무프로세스 파악(현실세계)   -> 개념적 DB 모델링 -> 개념적 구조
          업무 요구 분석                               ↓
      
          ↕  일치성 검토                        논리적  DB 모델링
                                                    ↓
         물리적 DB ←         물리적 DB 모델링   ← 데이터 모델 ( 논리구조)
  
  2. 데이터베이스의 모델링 단계
     1) 개념적 DB 모델링 단계 
         - 요구 분석 후 ㄱ. Entity (개체) 추출, ㄴ. attribute (속성) 추출하고 
             ㄷ. entity 간의 관계 정의를 통해 ER-Diagram 작성(구성)단계
             
     2) 논리적 DB 모델링 단계 
         - ER-Diagram 을 mapping rule 을 통해서 
            RDBMS 이론에 입각한 스키마를 설계 + 정규화 수행과정
         - 스키마?
     3) 물리적 DB 모델링 단계 
        - DBMS (오라클), 컬럼, 데이터타입, 크기 + 데이터사용량 분석 통해 
        효율적인 데이터베이스가 되도록 인덱스 정의, 역정규화 수행단계
     4) 실제 데이터베이스 생성
     5) 본격적인 어플리케이션 개발
    ----------------------------------
             [DB 모델링 과정]
              1. 요구분석
              2. 요구분석 명세서 작성 ( 프로젝트)
              -------------
              3. 개념적 모델링
              4. 개념적 스키마- ER Diagram 작성 
              -------------
              5. 논리적 모델링
              6. 매핑룰 -> 논리적 스키마( 관계형 데이터베이스 스키마)
              7. 정규화
              -------------
              8. 물리적 모델링
              9. 인덱스 정의, 역정규화, 컬럼 크기, 자료형 설정..
  -----------------------------------------------------------------
  3.요구 분석
  ㄱ. 관련 분야에 대한 기본지식 , 상식 필요 ex.회계 프로그램, 자산, 손실, 손익분기점..
  ㄴ. 신입사원 입장으로 업무자체와 프로세스 파악에 초점을 두고 분석
  ㄷ. 요령 - 업무문서(서류, 장표, 보고서) 이용해서 데이터로 관리되어지는 항목 파악
          - 앱, 웹 모든 페이지 이용해서 데이터로 관리되어지는 항목 파악
  ㄹ. 담당자 인터뷰
  ㅁ. 백그라운드 프로세스 파악 (하나의 업무에서 다양한 경우의 수 발생)
  ㅂ. 사용자 요구 분석
  
  4. 개념적 DB 모델링
     ㄱ. 사용자가 필요로 하는 데이터가 무엇? -> 어떤 데이터를 DB에 저장해야할 지 충분히 분석
     ㄴ. 요구분석 -> 현실 세계의 수집된 정보들을 명확한 형태로 표현하는 단계.
     ㄷ. ER Diagram(ERD) : 현실 (e) 관계 (r) 모델
          1) 1976년 P.chen 제안
          2) 개체 + 관계 모델을 그래프 형식으로 알아보기 쉽게 표현한 것.
            개체 - 직사각형
            속성 - 타원형
            개체들 간의 관계 - 마름모
            
            이것들을 연결하는 링크로 구성
     ㄹ. ER-Diagram 용어
       1. Entity (개체, 실체)]
        - 업무수행을 위해 '데이터로 관리'돼야하는 사람, 사건, 장소, 과정,, 유무형의 모든 것
          (현실 세계 독립적으로 존재하는 고유 식별가능한 객체) 
          ex. 학생, 과정
        - 물리적 존재 유형, 무형
        - 실체(entity)는 테이블로 정의
          ex. 사원(emp), 급여등급(salgrade), dept부서, bonus보너스,
        - 실체 파악 시 관련 업무에 대한 지식 가장 중요
          ex. 학원 db 모델링
               학생 출결상태, 성적관리,, 입시관련  등등
       2. attribute ( 속성)
         - 실체에 대한 저장할 필요가 있는 실체의 정보
            ex. 학생 -이름, 주소, 연락처..
        - 속성은 실체의 성질, 분류, 수량, 상태 ,특성, 특징을 나타내는 세부항목을 의미
            ex. 학생 - 주민등록번호 속성x(성별, 나이, 생일)
        - 속성 설정 시 가장 중요한 부분 : 관리의 목적, 활용방향
        - 속성은 컬럼으로 정의된다.
        - 속성의 유형
            ㄱ. 기초속성 : 원래 갖고 있는 속성
            ㄴ. 추출속성 : 기초 속성을 가공처리(계산)해서 얻을 수 있는 속성 
             ex. 성별, 나이, 생일 속성 -> 주민등록번호(기초속성)로 추출가능.
             ex. 단가 * 수량 = 판매금액 ( price * p_su = 판매금액)
                자료의 중복성, 무결성 확보를 위해서 최소화 시켜서 사용
            ㄷ. 설계속성 : 실제로는 실체에 존재하지 않으나, 시스템의 효율성을 위해 설계자가 임의로 부여하는 속성
             ex. 주문상태 확인 -> 주문, 결제완료, 배송완료, 배송중, 택배사.. 확인하는 속성 
          - 속성 도메인의 설정
            ㄱ. 도메인? 속성이 가질 수 있는 값들의 범위  ==제약조건, 특성
            ㄴ. 도메인 설정: 속성에 대한 세부업무, 제약조건, 특성을 전체적으로 정의해주는 것
               kor NUMBER(3)   0<=  <=100   CK
            ㄷ. 도메인 설정은 추후 개발 및 실체를 DB로 생성할 때나 프로그램 구현시 유용하게 사용된다.
            ㄹ. 도메인 정의 시에는
              속성의 이름
              자료형
              크기
              형식
              허용되는 값으 제약조건
              유일성
              유효값
              초기값
              등의 사항을 파악해주면 된다.
            ㅁ. 도메인 무결성 : 데이터의 입력형식이나 입력방식을 정의함으로써
                            잘못된 데이터가 입력되는 경우의 수를 방지하기 위해 설정하는 것
       3. identifier (식별자) ==언더라인 (underline) 밑줄
          ㄱ. 식별자? 하나의 실체 내에서 각각의 인스턴스를 유일하게 구분할 수 있는 단일 속성/속성그룹
             EX. 사원 실체(테이블)
                  A사원 -  행 = 레코드 =각각의 인스턴스   empno(사원번호) 속성
                  B사원 -  
          ㄴ. 식별자가 없으면 데이터를 제대로 수정/삭제 못한다
           이름/ 부서/입사일자/ 잡  -> 이름으로 삭제 =>이름 같은 사람있으면?
           
          ㄷ. 식별자 종류
           1) 후보키 Candidate Key
             - 실체에서 각각의 인스턴스를 구분할 수 있는 속성
               ex. 사원실체 e - 사번, 사원명, 주민번호, 이메일, 전화번호..
                          7           14     15    15  
           2) 기본키 Primary Key ..사번
             - 후보키 중에 가장 적합한(대표적) 키 : 업무적 활용도(크기 작은게 좋음)
           3) 대체키 Alternate Key  ..사원명, 주민번호, 이메일, 전화번호..
             - 후보키 - 기본키 = 대체키 
           4) 복합키 Composite Key
             - 하나의 속성으로 기본키가 될 수 없는 경우 둘 이상의 속성을 묶어서 식별자로 정의
             - 복합키를 구성할 때의 주의사항
                 ㄱ. 복합키 중 어떤 속성을 먼저 둘 것인가
                 ㄴ. 이유? 먼저오는 속성에 인덱스, 유일성이 적용되기 때문에 성능 고려 때문
                 
                 ex.급여지급 실체( 테이블)
                        복합키
               [ 급여지급일 + 사원번호 ]  지급액
                 2022/02     7369   3,500,00
                 2022/03     7369   3,500,00
                 2022/04     7369   3,500,00                 
                 
                주의할 점) 급여지급일 + 사원번호 속성 중 어느 컬럼으로 조회 많이 하는지에 따라 정하기
             5) 대리키 surrogate Key
                      수정/삭제
                - 복합키를 대신할 식별자
                - 역정규화 ( 물리적 모델링 )
                - 성능, 효율성 때문에 만듦
                                                 PK
                 급여지급일 + 사원번호   지급액    [일련번호]
                 2022/02     7369   3,500,00       1
                 2022/03     7369   3,500,00       2
                 2022/04     7369   3,500,00       3
                
       4. relation (관계)  ==     마름모로 표시
         - 실체와 실체의 업무연관성  
           ex. 사원실체   소속관계   부서실체
               학생실체    수강관계   과정실체
              
         - 관계도 속성을 가질 수 있다, 기본키도 가질 수 있다.
           ex. 회원실체     대여관계     비디오 테이프 실체
                           대여일자
                           결제
                           반납일자
                           손실
                            :  
          -  관계 표현 
            1) 실선으로 연결  실체──────실체
            2) 관계 차수 표현
              1:1 
              1:N 관계 : 한 부서는 여러명의 사원을 가질 수 있다
              N:N
              
              부모테이블                    자식테이블
              부서(E)─────<소속관계>────O─사원(E)
               1                               N
                                        O 들어가면 값 안들어가도 됨.
              부모테이블                    자식테이블
              고객(E)─────구매관계>─────상품(E)
                1                              N
                N                              1
                N                              N                 
              3) 선택성 표시 기호
 ---------------------------
[문제1] 다음은 현업 담담자와의 면담 자료이다. ( 요구 분석)
지금까지 알아본 개념을 바탕으로 다음에서 [실체]와 [주요 속성]을 추출해 다이어 그램을 그리시오.

나는 교육센터의 관리자이다 우리는 여러 과정을 가르치는 데, 각 과정은 코드,이름 및 수강료를 갖고 있다. 
'VB'과 'Java' 는 인기 있는 과정이다. 과정들은 1일~4일간으로 기간은 다양하다. 박찬호와 박신양은 우리의 가장 
훌륭한 강사들이다. 우리는 각 강사의 이름과 전화번호를 필요로 한다. 학생들은 시간에 따라 여러 개의 과정을 이수할 수 있는 데 
많은 학생들이 이렇게 하고 있다. 우리는 각 학생들의 이름과 전화번호를 알고 싶다.  
   
 1. 실체  :  과정,  학생, 강사 -> 직원(강사, 관리자..), 강사과목(강사별 강의할 수 있는), 강의장
 2. 속성  :  과정(코드, 이름, 수강료, 기간)
            , 강사( 이름, 전화번호 )
            , 학생( 이름, 전화번호 )
 3. 식별자
 4. 관계
    ㄱ. 관계차수
    ㄴ. 선택성
-------------------------------------
 = 비디오 가게(ShOP)  DB모델링 =
 
   □ 실무자와 같이 업무적인 설명을 듣고 모델링을 시작해 보자.

      1. 회원제를 실시하는 비디오 상점.
      2. 회원 관리
         ㄱ) 회원이름, 주민번호, 전화번호, 휴대폰번호, 우편번호, 주소, 등록일 등 .
      3. 비디오 테이프 관리
         ㄱ) 장르별, 등급별로 나누어 관리.
         ㄴ) 고유한 일련번호를 부여해서 비디오 테이프를 관리. 
         ㄷ) 영화제목, 제작자, 제작 국가, 주연배우, 감독, 개봉일자, 비디오 출시일 등 상세 정보 관리.
         ㄹ) 파손 여부와 대여 여부 관리.      
      4. 비디오 테이프 대여
         ㄱ) 회수일이 기본 이틀
         ㄴ) 미납 회원들의 목록을 자동으로 관리.
         ㄷ) 연체되었을 경우에는 연체료를 받는다.
         ㄹ) 대여료 신/구 차등 관리.
      5. 포인터 관리 서비스
         ㄱ) 회원에게 대여 1회당 1점씩 포인트 점수를 부여하여 10점이 되면 무료로 TAPE 하나 대여 서비스
      6. 관리자 관리
         ㄱ) 일별 , 월별, 년별 매출액 손쉽게 파악.
         ㄴ) 비디오 테이프의 대여 회수 파악.
         ㄷ) 연체료 관리
         ㄹ) 미납 회원 관리.
         ㅂ) 직원 관리( 근무 시간, 임금 자동 계산 )
         ㅅ) 체인점을 확장해 운영하고 자 함.  
 
  실체  :  회원,,미납회원, 비디오테이프 , 비디오 테이프 관리, 비디오 테이프 대여,포인터 테이블,매출,직원,지점
  속성  :  회원(회원코드, 회원이름, 주민번호, 전화번호, 휴대폰번호, 우편번호, 주소, 등록일, 연체여부)
             ,미납회원( 회원코드, 회원이름, 연체비디오 일련번호, 연체료)
          , 비디오테이프( 일련번호, 영화장르, 영화제목, 제작자, 제작 국가, 주연배우, 감독, 개봉일자, 비디오 출시일 )
            , 비디오 테이프 관리 (일련번호, 장르, 등급, 대여가능여부, 비디오대여횟수)
            , 비디오 테이프 대여 ( 회수일, 미납 회원, 연체료, 대여료)
          ,포인터 테이블 ( 회원코드, 회원대여횟수, 회원포인트, 무료대여서비스 횟수 )
          ,매출(일별 매출액, 월별 매출액, 년별 매출액)
          ,직원( 직원코드, 직원이름, 직위, 근무시간, 임금, 입사일자 ,지점명)
          ,지점( 지점코드, 지점명, 위치, 오픈일자, 평균매출, 사원수)
  ---------------------------------
  [논리적DB 모델링]
  1. 관계형 모델의 개념
    ㄱ. 기준: 관계의 주체 여부, 관계의 주체는 부모테이블
       예) 고객테이블   <주문관계>   상품테이블
           주문주체
          부모테이블
       예) 사원테이블   <소속관계>    부서테이블
                                   부모테이블
     부서가 먼저 정의되어야 사원에 대한 부서를 정의할 수 있으므로 부서테이블이 부모테이블이 된다
    ㄴ.  기본키 PRIMARY KEY와 포린키 FOREIGN KEY
      ex. dept(deptno: PK) 부모테이블
          
          소속관계( deptno)
          
          emp( deptno : FK ) 자식테이블
    ㄷ. 식별관계와 비식별관계
       1) 식별관계 : 부모테이블 pk --------> 자식테이블의 pk 또는 PK그룹으로 정의되는 것
          ex. book(b_id) - danga(b_id)
       2) 비식별관계 :부모테이블 pk --------> 자식테이블의 FK그룹으로 정의되는 것
         ex. emp -> dept

  2. ERD -> 논리적 모델링
            매핑룰( mappint rule) -> 논리적 스키마 생성
    매핑룰( mappint rule)? ERD을 이용해서 관계 스키마를 생성하기 위해서 따르는 규칙
                          개념적 모델링에서 도출된 실체 타입과 관계 타입 -> 테이블 정의를 의미 = 관계스키마
          1단계) Entity -> 테이블
                Relational -> 테이블( 속성이 있는 관계는 테이블로 바뀜0
          2단계) Attribute -> 컬럼
          3단계) Identifier -> 기본키
          4단계) Relational -> 포린키
          
          <ERD> -> Mapping Rule -> <관계schema>
  3. 문제점? erd 관계차수 n:n 다 대 다 관계
    ex. 회원(고객) 테이블 + 비디오(상품) 테이블
           N                N
      데이터 중복성 발생
      
                 대여(주문)테이블
           비디오(상품)코드    고객ID   수량
              1         A       2
              1         B       1
              1         A       2
    해결 :    고객 N                    상품
               1:N      주문테이블     1:N 테이블 도출함으로써 해결함 
            
    4. 정규화
        1) 정규화 의미  : ERD -> 관계스키마 (테이블) 생성
          함수적 종속성 등의 종속성 이론을 이용해서
         [잘못설계된 관계 스키마]를 더 작은 속성의 [바람직한 스키마]로 만들어가는 과정
        
         4) 정규화 목적
         - 데이터의 중복 제거
         - 데이터 검색, 수정,삭제 를 보다 쉽게 하기 위해
         - 삽입, 삭제, 수정 이상의 발생 방지
         
         5) 정규화(Normal Form)종류
           ㄱ. 제1정규화(1NF) : 
                    릴레이션에 속한 모든 속성의 도메인(컬럼값)이 
                    원자 값(atomic value=중복X)으로만 구성되어 있으면 제1정규형에 속한다.
                    반복되는 속성을 제거한 뒤 기본 테이블의 기본키를 추가해 새로운 테이블을 생성한다.
           ㄴ. 제2정규화(2NF) : 
           ㄷ. 제3정규화(3NF) : 
           ㄹ. BCNF
           ㅁ. 제4정규화(4NF) : 
           ㅂ. 제5정규화(5NF) :       
        
       2) 함수적 종속성
         ㄱ. 이상 현상
           : 관계 모델에서는 속성간에 존재하는 여러 종속관계를 하나의  릴레이션(테이블)에
             표현하기 때문에 이상현상 발생함.
             즉, 데이터의 중복으로 인하여 관계 연산을 처리할 때 곤란한 현상
            A.삽입이상 : 릴레이션에 새 데이터를 삽입하기 위해 
                       원치 않는 불필요한 데이터도 함께 삽입해야 하는 현상
            B.수정이상 : 릴레이션의 중복된 투플들 중 일부만 수정하여 데이터가 불일치하게 되는 모순이 발생하는 것
            C.삭제이상 : 릴레이션에서 투플을 삭제하면 꼭 필요한 데이터까지 함께 삭제하여 데이터가 손실되는 연쇄 삭제 현상
            
        ㄴ. 함수적 종속성
          어떤 릴레이션(테이블) R(dept)에서 
          x(deptno) 와 y(dname)를 각각 R(dept)의 속성집합(칼럼)의 부분집합이라 할 경우,
          속성x(deptno-10) 의 값 각각에 대하여 시간에 관계없이 항상 속성 y(dname)의 값이 오직 하나만 연관되어 있을때,
          y(dname) 는 x(deptno)에 함수적 종속이라고 한다.
           기호 :  X -> Y
           
          ex). dept 부서테이블
               pk
            결정자       종속자
            deptno   /    dname   /  loc      --완전 함수적 종속
                                      /이벤트 컬럼 -- 완전 관련없는 컬럼 존재 ? :부분 함수적 종속 -> 제거해야함
              X            Y
        dname 속성은 deptno 속성에 함수적 종속이다
                                        
          ex) 사원테이블
          pk
          사원 ID/ 사원명/ 등급     / 이벤트 번호x, 
          
            